Generate functions in model namespace via macro or whatever.

Figure out an API for associations.
  Maybe ...
    (has-many :products)
    (belongs-to :holding-company)
  creates
    (manufacturer/find-products {:id 3})
    (manufacturer/find-holding-company {:holding_company_id 3})

Maybe create lazy seqs for many associations?

Get db configuration sane.

Does generating functions in a namespace really make a better API than general functions that take more arguments?
  Generated
    (manufacturer/find-record 3)
    (manufacturer/create {:name "Foo" :founded "2008"})
    (manufacturer/find-products {:id 3})
    (manufacturer/find-holding-company {:holding_company_id 3})
    (manufacturer/find-all {:founded "1965"} [:include :holding-company :products])
  VS normal
    (cljrecord/find-record :manufacturer 3)
    (cljrecord/create :manufacturer {:name "Foo" :founded "2008"})
    (cljrecord/find-children :manufacturer :products {:id 3})
    (cljrecord/find-parent :manufacturer :holding-company {:holding_company_id 3})
    (cljrecord/find-all :manufacturer {:founded "1965"} [:include :holding-company :products])
  For the macros not to get huge it's probably best for the former set of functions to delegate to the latter anyway.
